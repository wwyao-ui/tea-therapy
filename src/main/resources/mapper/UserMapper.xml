<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <resultMap type="com.example.demo.entity.User" id="UserinfoResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="pwd" column="pwd"/>
        <result property="sortname" column="sortname" />
    </resultMap>


    <select id="selectUserinfoList" parameterType="com.example.demo.entity.User" resultMap="UserinfoResult">
        select s.id,s.name,s.pwd,s.sortname from user s
        <where>
        </where>
    </select>
    <select id="selectUserinfoById" parameterType="Integer" resultMap="UserinfoResult">
        select s.*
        from user s
        where s.id = #{id}
    </select>
<!--    <select id="selectAll" resultMap="UserinfoResult">-->
<!--        select s.*-->
<!--        from user s-->
<!--        <where>-->
<!--            <if test="name != null and name != '' ">-->
<!--                and name=#{name}-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->
    <select id="selectAll" resultMap="UserinfoResult">
        select s.*
        from user s
        <where>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>
<!--    <insert id="insertUserinfo" parameterType="com.example.demo.entity.User" useGeneratedKeys="true" keyProperty="id">-->
<!--        insert into user (-->
<!--        <if test="name != null and name != '' ">name,</if>-->
<!--        <if test="pwd != null and pwd != '' ">pwd,</if>-->
<!--        <if test="sortname != null and sortname != '' ">sortname,</if>-->
<!--        )values(-->
<!--        <trim prefixOverrides=",">-->
<!--            <if test="name != null and name != ''">#{name},</if>-->
<!--            <if test="pwd != null and pwd != ''">#{pwd},</if>-->
<!--            <if test="sortname != null and sortname != ''">#{sortname},</if>-->
<!--        </trim>-->
<!--        )-->
<!--    </insert>-->
<!--    <insert id="insertUserinfo" parameterType="com.example.demo.entity.User" useGeneratedKeys="true" keyProperty="id">-->
<!--        insert into user (name, pwd, sortname) values-->
<!--        <trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--            <if test="name != null and name != ''">-->
<!--                #{name},-->
<!--            </if>-->
<!--            <if test="pwd != null and pwd != ''">-->
<!--                #{pwd},-->
<!--            </if>-->
<!--            <if test="sortname != null and sortname != ''">-->
<!--                #{sortname},-->
<!--            </if>-->
<!--        </trim>-->
<!--    </insert>-->
    <insert id="insertUserinfo" parameterType="com.example.demo.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into user (name, pwd) values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="pwd != null and pwd != ''">
                #{pwd},
            </if>
        </trim>
    </insert>

<!--    <insert id="batchAdd" parameterType="com.example.demo.entity.User" useGeneratedKeys="true" keyProperty="id">-->
<!--        insert into user (-->
<!--        name,pwd,sortname)values-->
<!--        <foreach item="item" index="index" collection="list" separator=",">-->
<!--            (-->
<!--            #{item.name}, #{item.pwd}, #{item.sortname})-->
<!--        </foreach>-->
<!--    </insert>-->
    <insert id="batchAdd" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into user (name, pwd, sortname)
        <foreach item="item" collection="list" separator=",">
            values (#{item.name}, #{item.pwd}, #{item.sortname})
        </foreach>
    </insert>

    <update id="updateUserinfo" parameterType="com.example.demo.entity.User">
        update user
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="pwd != null and pwd != ''">pwd = #{pwd},</if>
            <if test="sortname != null and sortname != ''">sortname = #{sortname},</if>
        </set>
        where id = #{id}
    </update>

<!--    <update id="batchUpdate" parameterType="java.util.List">-->
<!--        update user-->
<!--        <trim prefix="set" suffixOverrides=",">-->
<!--            <trim prefix="status =case" suffix="end,">-->
<!--                <foreach collection="list" item="item" index="index">-->
<!--                    <if test="name != null and name != ''">when id=#{item.id} then #{name}</if>-->
<!--                    <if test="pwd != null and pwd != ''">when id=#{item.id} then #{phone}</if>-->
<!--                    <if test="sortname != null and sortname != ''">when id=#{item.id} then #{sortname}</if>-->

<!--                </foreach>-->
<!--            </trim>-->
<!--        </trim>-->
<!--        where id in-->
<!--        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">-->
<!--            #{item.id,jdbcType=BIGINT}-->
<!--        </foreach>-->
<!--    </update>-->
    <update id="batchUpdate" parameterType="java.util.List">
        update user
        <set>
            <trim prefix="status = case" suffix="end">
                <foreach collection="list" item="item" index="index">
                    <if test="item.name != null and item.name != ''">
                        when id = #{item.id} then #{item.name}
                    </if>
                    <if test="item.pwd != null and item.pwd != ''">
                        when id = #{item.id} then #{item.pwd}
                    </if>
                    <if test="item.sortname != null and item.sortname != ''">
                        when id = #{item.id} then #{item.sortname}
                    </if>
                </foreach>
            </trim>
        </set>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>

    <delete id="deleteUserinfoById" parameterType="Integer">
        delete from user where id = #{id}
    </delete>

<!--    <delete id="batchDeleteUserinfo" parameterType="Integer">-->
<!--        delete from user where id in-->
<!--        <foreach item="id" collection="array" open="(" separator="," close=")">-->
<!--            #{id}-->
<!--        </foreach>-->
<!--    </delete>-->
    <delete id="batchDeleteUserinfo" parameterType="java.util.List">
        delete from user where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


</mapper>
